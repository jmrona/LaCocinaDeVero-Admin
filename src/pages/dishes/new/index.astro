---
import GermanFlag from "@/components/icons/german.astro";
import SpainFlag from "@/components/icons/spain.astro";
import UkFlat from "@/components/icons/uk.astro";
import Modal from "@/components/Modal.astro";
import Layout from "@/layouts/Layout.astro";
import {Save} from "@lucide/astro";
---

<Layout title="Dishes">
  <h1 class="text-2xl font-semibold text-balance mb-3">Nuevo plato</h1>
  <form id="new-dish-form" method="post" class="flex gap-4" enctype="multipart/form-data">
    <div class="flex-1/2 flex flex-col gap-4">
      <label for="name" class="flex flex-col gap-1">
        Nombre del plato 
        <div class="relative">
          <input type="text" name="name-es" id="name-es" class="input w-full pe-10" placeholder="Nombre del plato en español" required>
          <SpainFlag width={20} height={20} class="absolute top-1/2 right-4 transform -translate-y-1/2" />
        </div>
        <div class="relative">
          <input type="text" name="name-en" id="name-en" class="input w-full pe-10" placeholder="Nombre del plato en inglés" required>
          <UkFlat width={20} height={20} class="absolute top-1/2 right-4 transform -translate-y-1/2" />
        </div>
        <div class="relative">
          <input type="text" name="name-de" id="name-de" class="input w-full pe-10" placeholder="Nombre del plato en alemán" required>
          <GermanFlag width={20} height={20} class="absolute top-1/2 right-4 transform -translate-y-1/2" />
        </div>
      </label>
      
      <label for="price" class="flex flex-col gap-1">
        Precio
        <input type="number" name="price" id="price" class="input" placeholder="Precio" required step="any">
      </label>

      <label for="categories" class="flex flex-col gap-1 relative">
        <span id="categories-label">
          Categorías
        </span>

        <div class="bg-slate-300 grid grid-cols-3 rounded-sm w-full" aria-hidden="false">
          {[{id:1, name: "option1"}, {id:2, name: "option2"}, {id:3, name: "option3"}].map((option) => (
            <label class="badge badge-primary p-2"> 
              <span class="bg-slate-500 px-2 py-1 flex rounded-sm text-white items-center justify-between">
                {option.name} 
                <input type="checkbox" name="categories" value={option.id} class="accent-primary">
              </span>
            </label>
          ))}
        </div>
      </label>

      <label for="allergens" class="flex flex-col gap-1">
        <span id="categories-label">
          Alérgenos
        </span>

        <div class="bg-slate-300 grid grid-cols-3 rounded-sm w-full" aria-hidden="false">
          {[{id:1, name: "option1"}, {id:2, name: "option2"}, {id:3, name: "option3"}].map((option) => (
            <label class="badge badge-primary p-2"> 
              <span class="bg-slate-500 px-2 py-1 flex rounded-sm text-white items-center justify-between">
                {option.name} 
                <input type="checkbox" name="allergens" value={option.id} class="accent-primary">
              </span>
            </label>
          ))}
        </div>
      </label>
    </div>
    <div class="flex-1/2 flex flex-col gap-4">
      imagen
    </div>

  </form>
  <button type="submit" form="new-dish-form" class="btn mt-4"> 
    <Save size={20}/> Guardar
  </button>
</Layout>   

<Modal id="error-dialog" class="min-w-xl px-10 py-12 flex flex-col">
  <h3 class="text-[20px] font-medium leading-6 text-gray-900">
    Error
  </h3>
  <div class="error-msg grow mt-2 text-sm text-red-600"></div>
  <button type="button" data-slot="close-button" class="mt-10 inline-flex justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:text-sm [&[disabled=true]]:cursor-not-allowed [&[disabled=true]]:grayscale-75 [&[disabled=true]]:select-none">
    Cerrar  
  </button>
</Modal>

<script>
  document.addEventListener("DOMContentLoaded", function(e) {
    const form = document.querySelector("#new-dish-form") as HTMLFormElement;
    const closeBtn = document.querySelector("#error-dialog [data-slot='close-button']") as HTMLButtonElement;
    const dialog = document.querySelector("#error-dialog") as HTMLDialogElement;
    const errorMsg = dialog.querySelector(".error-msg") as HTMLDivElement;

    closeBtn.addEventListener("click", function(e) {
      e.preventDefault();
      e.stopPropagation();
      dialog.close();
    })

    form.addEventListener("submit", async (event) => {
      event.preventDefault();
      event.stopPropagation();
      const data = new FormData(form);
  
      const name = {
        es: data.get("name-es")?.toString()?.trim(),
        en: data.get("name-en")?.toString()?.trim(),
        de: data.get("name-de")?.toString()?.trim(),
      }
      const price = parseFloat(data.get("price")?.toString() ?? "");
      const categories = Array.from(data.getAll("categories")).map(category => category);
      const allergens = Array.from(data.getAll("allergens")).map(allergen => allergen);
  
      const response = await fetch(`/api/store-dish`, {
        method: "POST",
        body: JSON.stringify({
          name,
          price,
          categories,
          allergens
        }),
        
        headers: {
          "Content-Type": "application/json",
        },
      });

      if (!response.ok) {
        const error = await response.json();

        errorMsg.innerText = error.message;
        dialog.showModal();
        return;
      }

      window.location.href = "/dishes";
    })
  })
</script>